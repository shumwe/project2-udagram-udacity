Description: >
    Bravin Shumwe: Project Four / Deploying a high-availability web application with cloudformation.
    This file holds the base infrastructure for the application: ie vpc, subnets, internet gateway, 
    NAT gateways, routes, route tables, EIPs and related attachments.

Parameters:
    EnvName:
        Type: String
        Description: Name of the infrastructure
    VPCCIDR:
        Type: String
        Description: IP Address range of the vpc
        Default: 10.0.0.0/16
    PublicSubnet1CIDR:
        Type: String
        Description: Ip range for public subnet 1
        Default: 10.0.1.0/24
    PublicSubnet2CIDR:
        Type: String
        Description: Ip range for public subnet 2
        Default: 10.0.2.0/24
    PrivateSubnet1CIDR:
        Type: String
        Description: Ip range for private subnet 1
        Default: 10.0.3.0/24
    PrivateSubnet2CIDR:
        Type: String
        Description: Ip range for private subnet 2
        Default: 10.0.4.0/24

Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            EnableDnsHostnames: true
            CidrBlock: !Ref VPCCIDR
            Tags:
                - Key: Name
                  Value: !Sub ${EnvName}-VPC
    
    UdagramInternetGateWay:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Sub ${EnvName}-InternetGateway
    
    UdagramVpcInternetGateWayAttachent:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref UdagramInternetGateWay
            VpcId: !Ref VPC
    
    # my public subnets
    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            VpcId: !Ref VPC
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvName}-public-subnet-1
            
    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvName}-public-subnet-2
            VpcId: !Ref VPC
    
    # my private subnets
    PrivateSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${EnvName}-private-subnet-1
            VpcId: !Ref VPC

    PrivateSubnet2: 
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${EnvName}-private-subnet-2
            VpcId: !Ref VPC
    
    PublicSubnet1NatEip:
        Type: AWS::EC2::EIP
        DependsOn: UdagramVpcInternetGateWayAttachent
        Properties:
            Domain: vpc
            Tags:
                - Key: Name
                  Value: !Sub ${EnvName}-publicSubnet1-NAT-EIP

    PublicSubnet2NatEip:
        Type: AWS::EC2::EIP
        DependsOn: UdagramVpcInternetGateWayAttachent
        Properties:
            Domain: vpc
            Tags:
                - Key: Name
                  Value: !Sub ${EnvName}-publicSubnet2-NAT-EIP

    PublicSubnet1NatGateway:
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt PublicSubnet1NatEip.AllocationId
            SubnetId: !Ref PublicSubnet1
            Tags:
                - Key: Name
                  Value: !Sub ${EnvName}-PublicSubnet1-NatGateway
    
    PublicSubnet2NatGateway:
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt PublicSubnet2NatEip.AllocationId
            SubnetId: !Ref PublicSubnet2
            Tags:
                - Key: Name
                  Value: !Sub ${EnvName}-PublicSubnet2-NatGateway
    
    PublicSubnetsRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvName}-Public-Subnets-Route-Table
    
    UdagramPublicTrafficRoute: 
        Type: AWS::EC2::Route
        DependsOn: UdagramVpcInternetGateWayAttachent
        Properties: 
            RouteTableId: !Ref PublicSubnetsRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref UdagramInternetGateWay
    
    UdagramPublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicSubnetsRouteTable
            SubnetId: !Ref PublicSubnet1

    UdagramPublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicSubnetsRouteTable
            SubnetId: !Ref PublicSubnet2
    
    PrivateSubnet1RouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvName}-PrivateSubnet1-RouteTable

    PrivateSubnet1TrafficRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateSubnet1RouteTable
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref PublicSubnet1NatGateway
    
    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateSubnet1RouteTable
            SubnetId: !Ref PrivateSubnet1

    PrivateSubnet2RouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvName}-PrivateSubnet2-RouteTable
    
    PrivateSubnet2TrafficRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateSubnet2RouteTable
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref PublicSubnet2NatGateway
    
    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateSubnet2RouteTable
            SubnetId: !Ref PrivateSubnet2

Outputs:
    VPC:
        Description: UdaGram Virtual Private Cloud
        Value: !Ref VPC
        Export:
          Name: !Sub ${EnvName}-VPC
    
    UdagramInternetGateWay:
        Description: UdaGram Internet Gateway
        Value: !Ref UdagramInternetGateWay
        Export:
          Name: !Sub ${EnvName}-InternetGateway

    UdagramVpcInternetGateWayAttachent:
        Description: UdaGram Internet Gateway Attachment
        Value: !Ref UdagramVpcInternetGateWayAttachent
        Export:
          Name: !Sub ${EnvName}-InternetGateway-Attachment
    
    PublicSubnet1:
        Description: Public Subnet 1
        Value: !Ref PublicSubnet1
        Export:
            Name: !Sub ${EnvName}-PublicSubnet1
    
    PublicSubnet2:
        Description: Public Subnet 2
        Value: !Ref PublicSubnet2
        Export:
            Name: !Sub ${EnvName}-PublicSubnet2
    
    PrivateSubnet1:
        Description: Private Subnet 1
        Value: !Ref PrivateSubnet1
        Export:
            Name: !Sub ${EnvName}-PrivateSubnet1
    
    PrivateSubnet2:
        Description: Private Subnet 2
        Value: !Ref PrivateSubnet2
        Export:
            Name: !Sub ${EnvName}-PrivateSubnet2
    
    PublicSubnet1NatEip:
        Description: EIP 1
        Value: !Ref PublicSubnet1NatEip
        Export:
            Name: !Sub ${EnvName}-EIP-1

    PublicSubnet2NatEip:
        Description: EIP 2
        Value: !Ref PublicSubnet2NatEip
        Export:
            Name: !Sub ${EnvName}-EIP-2